@api_view(['POST'])
def filter_mirrors(request):
    qs = Q(form__in=request.POST.get('form', [])) & Q(product_slug__in=request.POST.get('category_id', []))
    mirrors = Mirror.objects.filter(qs)
    serializer = MirrorSerializer(mirrors, many=True)
    return Response({'entities': serializer.data})

===========
models = {'mirror': Mirror, 'console': Console}
serializers = {'mirror': MirrorSerializer, 'console': ConsoleSerializer}

filter_params = {k.lstrip('filter_param_', '') + '__in': v for k, v in request.POST.items() if k.startswith('filter_param_')}
model_name = request.POST['model_name'].lower()
model = models[model_name]
objects = model.objects.filter(filter_params)
serializer = serializers[model_name](objects, many=True)

return Response({'entities': serializer.data})

===============
models = {'mirror': Mirror, 'console': Console}
serializers = {'mirror': MirrorSerializer, 'console': ConsoleSerializer}

filter_params = {k.lstrip('filter_param_', '') + '__in': v for k, v in request.POST.items() if k.startswith('filter_param_')}
catalog_id = request.POST.get('catalog_id')
if catalog_id:
    filter_params['catalog_id'] = catalog_id
model_name = request.POST['model_name'].lower()
model = models[model_name]
objects = model.objects.filter(filter_params)
serializer = serializers[model_name](objects, many=True)

return Response({'entities': serializer.data})






